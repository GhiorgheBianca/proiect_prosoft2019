<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonInapoi.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        MH0eNQAAAABJRU5ErkJggg==
</value>
  </data>
</root>